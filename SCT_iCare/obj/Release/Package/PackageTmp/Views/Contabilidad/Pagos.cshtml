@*XLSX *@
<script type="text/javascript" src="https://unpkg.com/xlsx@0.15.1/dist/xlsx.full.min.js"></script>

@{
    ViewBag.Title = "Pagos";

    GMIEntities db = new GMIEntities();
    var oUser = (Usuarios)HttpContext.Current.Session["User"];


    //Fecha del mes.

    int inicioMes = 1;

    int diaMes = DateTime.Today.Day;
    int MES = DateTime.Today.Month;
    int ANIO = DateTime.Today.Year;

    DateTime FECHAI = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), inicioMes);
    DateTime FECHAF = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), diaMes);
    DateTime FECHAFS = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), diaMes);

    DateTime fechaInicio = DateTime.Today;
    DateTime fechaFinal = DateTime.Today;
    DateTime FechaAhora = DateTime.Now;

    int deuda = 0;
    int deudaAereos = 0;
    int deudaTotal = 0;
    int deuda1 = 0;
    int deudaAereos1 = 0;
    int deudaTotal1 = 0;
    int saldo = 0;
    int pago = 0;
    int pagoAereos = 0;
    int pagoTotal = 0;
    int pago1 = 0;
    int pagoAereos1 = 0;
    int pagoTotal1 = 0;
    string referido = "";
    string tipoReferido = "";
    int ingresoActual = 0;
    int ingresoActualAlt = 0;


    if (ViewBag.FechaInicio != null)
    {
        fechaInicio = Convert.ToDateTime(ViewBag.FechaInicio);
        DateTime parset = fechaInicio.AddMonths(1).AddDays(-1);

        fechaFinal = parset;
        FECHAF = fechaFinal;
        FECHAFS = FECHAF;
    }

    else
    {

        fechaInicio = FECHAI;
        fechaFinal = FECHAF;
        FECHAFS = FECHAF;
        fechaFinal = fechaFinal.AddDays(1);

    }

    if (ViewBag.Canal != "" || ViewBag.Canal != null)
    {
        tipoReferido = ViewBag.Canal;
    }

    else
    {
        tipoReferido = "";
    }

    if (ViewBag.Referido == "" || ViewBag.Referido == null)
    {
        referido = ViewBag.Referido;
    }

    else
    {
        referido = "";
    }


    //COMENTADO POR SI SE USA EL FILTRO DE FECHA POR DIA

    //if (ViewBag.FechaFinal != null)
    //{
    //    fechaFinal = Convert.ToDateTime(ViewBag.FechaFinal);
    //    FECHAFS = fechaFinal;
    //    fechaFinal = fechaFinal.AddDays(1);
    //}

    //else
    //{

    //    fechaFinal = FECHAF;
    //    FECHAFS = FECHAF;
    //    fechaFinal = fechaFinal.AddDays(1);

    //}

    //QUERYS TABLA REGISTROS

    var modelo = db.Paciente.Join(db.Cita, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).
Join(db.Captura, a => a.M.idPaciente, b => b.idPaciente, (a, b) => new { A = a, B = b }).
Where(s => s.B.EstatusCaptura == "Terminado" && s.A.M.Asistencia == null && s.A.M.CanalTipo.Contains(tipoReferido) && s.A.M.ReferidoPor.Contains(referido) && s.A.M.TipoTramite != "REVALORACIÓN").OrderBy(o => o.A.M.Cuenta);

    var pGestor = db.PagosGestores;

    //INGRESO DE PAGOS
    var ingresoNormales = db.PagosGestores.
Where(z => z.Gestor.Contains(referido));


    var modelo1 = db.PacienteESP.
Where(s => s.ReferidoPor.Contains(referido) && s.CanalTipo.Contains(tipoReferido) && s.EstatusCaptura == "Terminado"
&& s.TipoTramite != "REVALORACIÓN" && s.Asistencia == null).OrderBy(o => o.Cuenta);


    var modeloExcel = db.Paciente.Join(db.Cita, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).
        Join(db.Captura, a => a.M.idPaciente, b => b.idPaciente, (a, b) => new { A = a, B = b }).
        Where(s => s.B.EstatusCaptura == "Terminado" && s.A.M.Asistencia == null
        && s.A.M.Asistencia == null && s.A.M.TipoTramite != "REVALORACIÓN").OrderBy(o => o.A.M.Cuenta);

    var modeloExcel1 = db.PacienteESP.
        Where(s => s.ReferidoPor.Contains(referido) && s.CanalTipo.Contains(tipoReferido) && s.EstatusCaptura == "Terminado"
        && s.TipoTramite != "REVALORACIÓN" && s.Asistencia == null).OrderBy(o => o.Cuenta);


    //QUERYS FILTROS

    //if (ViewBag.Canal != "")
    //{
    //    canal = ViewBag.Canal;

    //    modelo = modelo.Where(w => w.A.M.CanalTipo.Contains(canal)).OrderBy(o => o.A.M.Cuenta);
    //    modelo1 = modelo1.Where(w => w.CanalTipo.Contains(canal)).OrderBy(o => o.Cuenta);
    //    modeloExcel = modeloExcel.Where(w => w.A.M.CanalTipo.Contains(canal)).OrderBy(o => o.A.M.Cuenta);
    //    modeloExcel1 = modeloExcel1.Where(w => w.CanalTipo.Contains(canal)).OrderBy(o => o.Cuenta);
    //}


    //int idReferido = ViewBag.idReferido;

    //if (ViewBag.Referido != "" && ViewBag.idReferido != 0)
    //{
    //    referido = ViewBag.Referido;

    //    modelo = modelo.Where(w => w.A.M.ReferidoPor.Contains(referido)).OrderBy(o => o.A.M.Cuenta);
    //    modelo1 = modelo1.Where(w => w.ReferidoPor.Contains(referido)).OrderBy(o => o.Cuenta);
    //    modeloExcel = modeloExcel.Where(w => w.A.M.ReferidoPor.Contains(referido)).OrderBy(o => o.A.M.Cuenta);
    //    modeloExcel1 = modeloExcel1.Where(w => w.ReferidoPor.Contains(referido)).OrderBy(o => o.Cuenta);

    //    var Tipo = (from i in db.Referido where i.idReferido == idReferido select i).FirstOrDefault();
    //    tipoReferido = Tipo.Tipo;
    //}

}


<br />
<h2 style="color: white">Control Pagos</h2>
<h5 style="color: white">Resultados del día @fechaInicio.ToString("dd-MMMM-yyyy") al día @FECHAFS.ToString("dd-MMMM-yyyy")</h5>
<br />

<form class="form-inline" method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/Pagos")">
    <div>



        <select name="canal" style="font-size:1.5vh; width: 100px" class="form-control">
            @{
                if (ViewBag.Canal == "" || ViewBag.Canal == null)
                {
                    <option value="">CANAL</option>
                }
                else
                {
                    <option value="@tipoReferido">@tipoReferido.ToUpper()</option>
                }
            }
            @{
                foreach (var item in db.Canales)
                {
                    <option value="@item.NombreCanal">@item.NombreCanal</option>
                }
            }
            <option value="">TODOS</option>
        </select>



        <select name="referido" style="font-size: 1.5vh; width: 130px" class="form-control">
            @{
                if (ViewBag.Referido == "" || ViewBag.Referido == null)
                {
                    <option value="">REFERIDO POR</option>
                }
                else
                {
                    <option value="@referido">@referido.ToUpper()</option>
                }
            }
            @foreach (var item in db.Referido.OrderBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                <option value="@item.idReferido">@item.Nombre -- @item.Tipo</option>
            }
            <option value="">TODOS</option>
        </select>





        @*FILTROS DE FECHA POR MES*@

        @{

            DateTime ViewBagFechaInicio = Convert.ToDateTime(ViewBag.fechaInicio);
            var SetFechaInicio = ViewBagFechaInicio.Date.ToString("yyyy-MM");

            if (ViewBag.fechaInicio != null)
            {

                <input type="month" name="fechaInicio" class="form-control" value="@SetFechaInicio" style="width: 160px;" />

            }

            else

            {

                <input type="month" name="fechaInicio" class="form-control" value="" style="width: 160px;" />

            }

        }

        @{

            DateTime ViewBagFechaFinal = Convert.ToDateTime(ViewBag.fechaFinal);
            var SetFechaFinal = ViewBagFechaFinal.Date.ToString("yyyy-MM-dd");

            if (ViewBag.fechaFinal != null)
            {

                <input type="hidden" name="fechaFinal" class="form-control" value="@SetFechaFinal" style="width: 160px;" />

            }

            else

            {

                <input type="hidden" name="fechaFinal" class="form-control" value="" style="width: 160px;" />

            }

        }





        @*FILTROS DE FECHA POR DIA*@
        @*@{

                DateTime ViewBagFechaInicio = Convert.ToDateTime(ViewBag.fechaInicio);
                var SetFechaInicio = ViewBagFechaInicio.Date.ToString("yyyy-MM-dd");

                if (ViewBag.fechaInicio != null)
                {

                    <input type="date" name="fechaInicio" class="form-control" value="@SetFechaInicio" style="width: 160px;" />

                }

                else

                {

                    <input type="date" name="fechaInicio" class="form-control" value="" style="width: 160px;" />

                }

            }

            @{

                DateTime ViewBagFechaFinal = Convert.ToDateTime(ViewBag.fechaFinal);
                var SetFechaFinal = ViewBagFechaFinal.Date.ToString("yyyy-MM-dd");

                if (ViewBag.fechaFinal != null)
                {

                    <input type="date" name="fechaFinal" class="form-control" value="@SetFechaFinal" style="width: 160px;" />

                }

                else

                {

                    <input type="date" name="fechaFinal" class="form-control" value="" style="width: 160px;" />

                }

            }*@

        <input type="submit" class="btn btn-info" value="Enviar" />

        <a href="~/Contabilidad/Pagos">
            <span type="button" class="btn btn-success">Limpiar</span>
        </a>

    </div>
    <br />

</form>

<script>

    function ExportToExcel(type, fn, dl)
    {
        var elt = document.getElementById('Excel');
        var wb = XLSX.utils.table_to_book(elt, { sheet: "sheet1" });
        return dl ?
            XLSX.write(wb, { bookType: type, bookSST: true, type: 'base64' }) :
            XLSX.writeFile(wb, fn || ('Pagos' + ' del @Convert.ToDateTime(fechaInicio).ToString("dd-MM-yy")' + ' al @Convert.ToDateTime(fechaFinal).AddDays(-1).ToString("dd-MM-yy").' + (type || 'xlsx')));
    }

</script>

<div>
    <button style="background-color:limegreen" class="btn btn-info dropdown-toggle" onclick="ExportToExcel('xlsx')">Exportar Datos a XLSX</button>
</div>


<br />
<div class="tablaScroll" style="min-height: 300px; max-height:450px">
    <table class="table  table-hover tablas table-bordered" style="color: #2F2D6B">
        <thead style="color:white">
            <tr>
                <th>Gestor/Canal</th>
                <th>EPIs Totales</th>
                <th>Importe</th>
                <th>Pago</th>
                <th>Ingresos del Mes</th>
                <th>Saldo del Mes</th>
                <th>Ingresos Totales</th>
                <th>Saldo Total</th>
                <th>Saldo</th>
                <th>Estatus</th>
                <th></th>
            </tr>
        </thead>

        @*AQUI EMPIEZA LA TABLA DE EPIS ALTERNATIVOS*@
        @{
            foreach (var itemd in db.Referido.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullosAlt = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                    if (gestoresNoNullosAlt != 0)
                    {

                    <tr>
                        <td>
                            <b>@itemd.Nombre</b><span style="font-size:xx-small"> @itemd.Tipo</span>
                        </td>

                        @{
                            //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA CON IVA
                            int deudaGestor = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA SIN IVA
                            int deudaGestorSIVA = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorAereo = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorTotal = deudaGestor + deudaGestorAereo;


                            //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestor1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" select i).Count();

                            //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorAereo1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorTotal1 = deudaGestor1 + deudaGestorAereo1;


                            //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                            deuda = itemd.PrecioNormalconIVA == null || itemd.PrecioNormalconIVA == "0" ? deudaGestor * Convert.ToInt32(itemd.PrecioNormal) : deudaGestor * Convert.ToInt32(itemd.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA

                            if (itemd.PrecioAereo == null || itemd.PrecioAereo == "0")
                            {
                                deudaAereos = deudaGestorAereo * 3480;
                            }

                            else
                            {
                                deudaAereos = deudaGestorAereo * Convert.ToInt32(itemd.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            deudaTotal = deuda + deudaAereos;


                            //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            deuda1 = itemd.PrecioNormalconIVA == null || itemd.PrecioNormalconIVA == "0" ? deudaGestor1 * Convert.ToInt32(itemd.PrecioNormal) : deudaGestor1 * Convert.ToInt32(itemd.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA

                            if (itemd.PrecioAereo != null || itemd.PrecioAereo != "0")
                            {
                                deudaAereos1 = deudaGestorAereo1 * 3480;
                            }

                            else
                            {
                                deudaAereos1 = deudaGestorAereo1 * Convert.ToInt32(itemd.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            deudaTotal1 = deuda1 + deudaAereos1;

                            if (deudaGestorAereo != 0)
                            {
                                deudaTotal = deuda + deudaAereos;
                                deudaTotal1 = deuda1 + deudaAereos1;
                                <td>
                                    <span class="field-tip">
                                        <b>@deudaGestorTotal</b>
                                        <span class="tip-content">
                                            @{

                                                if (deudaGestor != 0)
                                                {
                                                    if (itemd.PrecioNormalconIVA != "0" && itemd.PrecioNormalconIVA != null)
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi con IVA: $@itemd.PrecioNormalconIVA</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi sin IVA: $@itemd.PrecioNormal</span><br />
                                                    }

                                                }

                                            }
                                            @{
                                                if (deudaGestorAereo != 0)
                                                {

                                                    if (itemd.PrecioAereo == null || itemd.PrecioAereo == "0")
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $3480</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $@itemd.PrecioAereo</span><br />
                                                    }

                                                }

                                            }
                                        </span>
                                    </span>
                                </td>
                                <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                            }

                            else
                            {

                                <td>
                                    <span class="field-tip">
                                        <b>@deudaGestorTotal</b>
                                        <span class="tip-content">
                                            <span><b>No. Epis: @deudaGestor</b></span><br />
                                            @{
                                                if (itemd.PrecioNormalconIVA != "0" && itemd.PrecioNormalconIVA != null)
                                                {
                                                    <span>Precio de epi con IVA: $@itemd.PrecioNormalconIVA</span><br />
                                                }

                                                else
                                                {
                                                    <span>Precio de epi sin IVA: $@itemd.PrecioNormal</span><br />
                                                }
                                            }
                                            @{
                                                if (deudaGestorAereo != 0)
                                                {

                                                    if (itemd.PrecioAereo == null || itemd.PrecioAereo == "0")
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $3480</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $@itemd.PrecioAereo</span><br />
                                                    }

                                                }

                                            }
                                        </span>
                                    </span>
                                </td>
                                <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                            }

                        }

                        <td>

                            @{

                                //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestor = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorAereo = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorTotal = pagoGestor + pagoGestorAereo;


                                //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestor1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") select i).Count();

                                //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorrAereo1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorTotal1 = pagoGestor1 + pagoGestorrAereo1;


                                //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                pago = itemd.PrecioNormalconIVA == null ? pagoGestor * Convert.ToInt32(itemd.PrecioNormal) : pagoGestor * Convert.ToInt32(itemd.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                pagoAereos = pagoGestorAereo * Convert.ToInt32(itemd.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                pagoTotal = pago + pagoAereos;


                                //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                pago1 = itemd.PrecioNormalconIVA == null ? pagoGestor1 * Convert.ToInt32(itemd.PrecioNormal) : pagoGestor1 * Convert.ToInt32(itemd.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                pagoAereos1 = pagoGestorrAereo1 * Convert.ToInt32(itemd.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                pagoTotal1 = pago1 + pagoGestorrAereo1;


                                if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                                {

                                    pago = deudaTotal;
                                    <span>$@pago.ToString("###,###,###,###")</span>

                                }

                                else
                                {

                                    if (pagoGestorTotal != 0)
                                    {

                                        <span>$@pagoTotal.ToString("###,###,###,###")</span>
                                    }

                                    else
                                    {
                                        <span>$</span>
                                        <span>-----</span>
                                    }

                                }

                            }
                        </td>

                        @*INGRESO DEL MES*@
                        <td>
                            @{

                                var pG = (from i in db.PagosGestores where i.idReferido == itemd.idReferido && i.Fecha >= fechaInicio && i.Fecha < fechaFinal select i);

                                foreach (var pagosGes in pG)
                                {

                                    ingresoActualAlt += Convert.ToInt32(pagosGes.PagoIngresado);

                                }

                                <span>$@ingresoActualAlt.ToString("###,###,###,###")</span>

                             }
                        </td>

                        @*SALDO DEL MES*@
                        <td>
                        </td>

                        @*INGRESOS TOTALES*@
                        <td>
                        </td>

                        @*SALDO TOTAL*@
                        <td>
                        </td>
                                                

                        <td>

                            @{
                                saldo = pagoTotal + ingresoActualAlt - deudaTotal;

                                if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                                {

                                    saldo = 0;

                                    <span>$@saldo.ToString("###,###,###,###")</span>

                                }

                                else
                                {
                                    if (saldo < 0)
                                    {
                                        saldo = saldo * (-1);

                                        <span>($@saldo.ToString("###,###,###,###"))</span>
                                    }

                                    else
                                    {
                                        <span>$@saldo.ToString("###,###,###,###")</span>

                                    }

                                }

                                ingresoActualAlt = 0;

                            }

                        </td>
                        <td>

                            @{
                                var estatus = from i in db.PacienteESP where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                                string texto = "";

                                foreach (var i in estatus)
                                {
                                    if (i.FechaCita < DateTime.Today.AddDays(-30))
                                    {
                                        texto = "text-danger";
                                        break;
                                    }
                                    else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                    {
                                        texto = "text-warning";
                                        break;
                                    }
                                    else
                                    {
                                        texto = "text-success";
                                        break;
                                    }
                                }

                                <div style="width:2px;"></div>
                                <span class="@texto">•</span>

                            }

                        </td>

                        <td>
                            <div class="btn-group">
                                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Acciones <span class="glyphicon glyphicon-triangle-bottom"></span>
                                </button>

                                <div class="dropdown-menu" style="padding:10px">
                                    <a href="#" data-toggle="modal" data-target="#Deuda_@itemd.idReferido"><b>Ingresar Deuda</b></a>
                                    <div class="dropdown-divider"></div>
                                    <a href="#" data-toggle="modal" data-target="#Efectivo_@itemd.idReferido"><b>Ingresar Pago</b></a>
                                    <div class="dropdown-divider"></div>
                                </div>

                                @*ALERT INGRESAR DEUDA*@


                                @*<form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/Deuda")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Deuda_@itemd.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>¿Desea agregar una cantidad de DEUDA a @itemd.Nombre?</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@itemd.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Ingreso Pago:</label>
                                                        <b>@Convert.ToDateTime(fechaFinal).ToString("dd-MMMM-yyyy")</b><br />
                                                        <label for="recipient-name" class="col-form-label">Precio EPIs:</label>
                                                        <b>@itemd.PrecioNormal</b><br />
                                                        <label for="recipient-name" class="col-form-label"> Numero de Pagos del Gestor:</label>
                                                        <b>@Convert.ToInt32(pago)</b><br />
                                                        <label for="recipient-name" class="col-form-label">Cantidad:</label>
                                                        <input type="tel" class="form-control" name="deuda" />
                                                        <input type="hidden" value="@itemd.idReferido" class="form-control" name="id" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>*@


                                @*ALERT INGRESAR EFECTIVO*@

                                <form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/EditarEfectivo")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Efectivo_@itemd.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>¿Desea ingresar PAGO a @itemd.Nombre?</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@itemd.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />

                                                        <label for="recipient-name" class="col-form-label">Precio de EPIs:</label>
                                                        <b>$@itemd.PrecioNormal</b><br />
                                                        <label for="recipient-name" class="col-form-label"> Pagos del Gestor:</label>
                                                        <b>$@pago</b><br />
                                                        <label for="recipient-name" class="col-form-label">Cantidad:</label>
                                                        <input type="tel" class="form-control" name="efectivo" />
                                                        <input type="hidden" value="@itemd.idReferido" class="form-control" name="id" />
                                                        <input type="hidden" value="@fechaInicio" class="form-control" name="fecha1" />
                                                        <input type="hidden" value="@FECHAFS" class="form-control" name="fecha2" />
                                                        <input type="hidden" value="@FechaAhora" class="form-control" name="fechaAhora" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>

                        </td>

                    </tr>
                }

            }
        }


        @*AQUI EMPIEZA LA PARTE DE LA TABLA DE LOS EPIS NORMALES*@
        @{

            foreach (var item in db.Referido.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullos = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                if (gestoresNoNullos != 0)
                {
                    <tr>
                        <td>
                            <b>@item.Nombre</b><span style="font-size:xx-small"> @item.Tipo</span>
                        </td>
                        @{
                            //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestor = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorAereo = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorTotal = deudaGestor + deudaGestorAereo;


                            //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestor1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" select i).Count();

                            //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorAereo1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorTotal1 = deudaGestor1 + deudaGestorAereo1;


                            //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                            deuda = item.PrecioNormalconIVA == null || item.PrecioNormalconIVA == "0" ? deudaGestor * Convert.ToInt32(item.PrecioNormal) : deudaGestor * Convert.ToInt32(item.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA

                            if (item.PrecioAereo == null || item.PrecioAereo == "0")
                            {
                                deudaAereos = deudaGestorAereo * 3480;
                            }

                            else
                            {
                                deudaAereos = deudaGestorAereo * Convert.ToInt32(item.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            deudaTotal = deuda + deudaAereos;


                            //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            deuda1 = item.PrecioNormalconIVA == null || item.PrecioNormalconIVA == "0" ? deudaGestor1 * Convert.ToInt32(item.PrecioNormal) : deudaGestor1 * Convert.ToInt32(item.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA

                            if (item.PrecioAereo != null || item.PrecioAereo != "0")
                            {
                                deudaAereos1 = deudaGestorAereo1 * 3480;
                            }

                            else
                            {
                                deudaAereos1 = deudaGestorAereo1 * Convert.ToInt32(item.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            deudaTotal1 = deuda1 + deudaAereos1;

                            if (deudaGestorAereo != 0)
                            {
                                deudaTotal = deuda + deudaAereos;
                                deudaTotal1 = deuda1 + deudaAereos1;
                                <td>
                                    <span class="field-tip">
                                        <b>@deudaGestorTotal</b>
                                        <span class="tip-content">
                                            @{

                                                if (deudaGestor != 0)
                                                {
                                                    if (item.PrecioNormalconIVA != "0" && item.PrecioNormalconIVA != null)
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi con IVA: $@item.PrecioNormalconIVA</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi sin IVA: $@item.PrecioNormal</span><br />
                                                    }

                                                }

                                            }
                                            @{
                                                if (deudaGestorAereo != 0)
                                                {

                                                    if (item.PrecioAereo == null || item.PrecioAereo == "0")
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $3480</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $@item.PrecioAereo</span><br />
                                                    }

                                                }

                                            }
                                        </span>
                                    </span>
                                </td>
                                <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                            }

                                                else
                                                {

                                                    <td>
                                                        <span class="field-tip">
                                                            <b>@deudaGestorTotal</b>
                                                            <span class="tip-content">
                                                                <span><b>No. Epis: @deudaGestor</b></span><br />
                                                                @{
                                                                    if (item.PrecioNormalconIVA != "0" && item.PrecioNormalconIVA != null)
                                                                    {
                                                                        <span>Precio de epi con IVA: $@item.PrecioNormalconIVA</span><br />
                                                                    }

                                                                    else
                                                                    {
                                                                        <span>Precio de epi sin IVA: $@item.PrecioNormal</span><br />
                                                                    }
                                                                }
                                                                @{
                                                                    if (deudaGestorAereo != 0)
                                                                    {

                                                                        if (item.PrecioAereo == null || item.PrecioAereo == "0")
                                                                        {
                                                                            <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                                            <span>Precio de epi: $3480</span><br />
                                                                        }

                                                                        else
                                                                        {
                                                                            <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                                            <span>Precio de epi: $@item.PrecioAereo</span><br />
                                                                        }

                                                                    }

                                                                }
                                                            </span>
                                                        </span>
                                                    </td>
                                                    <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                                                }

                        }

                        <td>

                            @{

                                //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestor = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.UsarSaldo != "Si" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorAereo = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.UsarSaldo != "Si" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorTotal = pagoGestor + pagoGestorAereo;


                                //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestor1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.UsarSaldo != "Si" select i).Count();

                                //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorrAereo1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.UsarSaldo != "Si" select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorTotal1 = pagoGestor1 + pagoGestorrAereo1;


                                //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                pago = item.PrecioNormalconIVA == null ? pagoGestor * Convert.ToInt32(item.PrecioNormal) : pagoGestor * Convert.ToInt32(item.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                pagoAereos = pagoGestorAereo * Convert.ToInt32(item.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                pagoTotal = pago + pagoAereos;


                                //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                pago1 = item.PrecioNormalconIVA == null ? pagoGestor1 * Convert.ToInt32(item.PrecioNormal) : pagoGestor1 * Convert.ToInt32(item.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                pagoAereos1 = pagoGestorrAereo1 * Convert.ToInt32(item.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                pagoTotal1 = pago1 + pagoGestorrAereo1;


                                if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                                {

                                    pago = deudaTotal;
                                    <span>$@pago.ToString("###,###,###,###")</span>

                                }

                                else
                                {

                                    if (pagoGestorTotal != 0)
                                    {

                                        <span>$@pagoTotal.ToString("###,###,###,###")</span>
                                    }

                                    else
                                    {
                                        <span>$</span>
                                        <span>-----</span>
                                    }

                                }

                            }

                            @*@{
                                    int pagoGestor = (from i in db.Cita where i.CanalTipo == item.Tipo && i.ReferidoPor == item.Nombre && i.TipoPago != "Pendiente de Pago" && i.FechaCita >= fecha1 && i.FechaCita < fecha2 select i).Count();

                                    pago = item.PrecioNormalconIVA == null ? pagoGestor * Convert.ToInt32(item.PrecioNormal) : pagoGestor * Convert.ToInt32(item.PrecioNormalconIVA);

                                    if (pagoGestor != 0)
                                    {
                                        <span>$@pago.ToString("###,###,###,###")</span>
                                    }
                                    else
                                    {
                                        <span>@pagoGestor</span>
                                        <span>-----</span>
                                    }

                                }*@

                        </td>
                        
                        <td>
                            @{

                                var pG = (from i in db.PagosGestores where i.idReferido == item.idReferido && i.Fecha >= fechaInicio && i.Fecha < fechaFinal select i);

                                foreach (var pagosGes in pG)
                                {

                                    ingresoActual += Convert.ToInt32(pagosGes.PagoIngresado);

                                }

                                <span>$@ingresoActual.ToString("###,###,###,###")</span>

                            }
                        </td>

                        <td>
                        </td>

                        <td>
                        </td>

                        <td>
                        </td>



                        <td>

                            @{
                                saldo = pagoTotal + ingresoActual - deudaTotal;

                                if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                                {

                                    saldo = 0;

                                    <span>$@saldo.ToString("###,###,###,###")</span>

                                }

                                else
                                {
                                    if (saldo < 0)
                                    {
                                        saldo = saldo * (-1);

                                        <span>($@saldo.ToString("###,###,###,###"))</span>
                                    }

                                    else
                                    {
                                        <span>$@saldo.ToString("###,###,###,###")</span>

                                    }

                                }

                                ingresoActual = 0;

                            }


                            @*@{
                                    int saldoGestor = (from i in db.Cita where i.CanalTipo == item.Tipo && i.ReferidoPor == item.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fecha1 && i.FechaCita < fecha2 select i).Count();

                                    saldo = item.PrecioNormalconIVA == null ? saldoGestor * Convert.ToInt32(item.PrecioNormal) : saldoGestor * Convert.ToInt32(item.PrecioNormalconIVA);

                                    if (saldoGestor != 0)
                                    {
                                        if (saldo < 0)
                                        {
                                            <span><b>+$@saldo.ToString("###,###,###,###")</b></span>

                                            if (item.PrecioNormalconIVA != null)
                                            {
                                                var episDisponibles = saldo / Convert.ToInt32(item.PrecioNormalconIVA);
                                                <span style="font-size: xx-small">( @episDisponibles epis)</span>
                                            }
                                            else
                                            {
                                                var episDisponibles = saldo / Convert.ToInt32(item.PrecioNormal);
                                                <span style="font-size: xx-small">( @episDisponibles epis)</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>$@saldo.ToString("###,###,###,###")</span>
                                        }

                                    }
                                    else
                                    {
                                        <span>$0.00</span>
                                    }
                                }*@

                        </td>
                        <td>

                            @{
                                var estatus = from i in db.Cita where i.CanalTipo == item.Tipo && i.ReferidoPor == item.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                                string texto = "";

                                foreach (var i in estatus)
                                {
                                    if (i.FechaCita < DateTime.Today.AddDays(-30))
                                    {
                                        texto = "text-danger";
                                        break;
                                    }
                                    else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                    {
                                        texto = "text-warning";
                                        break;
                                    }
                                    else
                                    {
                                        texto = "text-success";
                                        break;
                                    }
                                }

                                <div style="width:2px;"></div>
                                <span class="@texto">•</span>

                            }

                        </td>

                        <td>
                            <div class="btn-group">
                                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Acciones <span class="glyphicon glyphicon-triangle-bottom"></span>
                                </button>

                                <div class="dropdown-menu" style="padding:10px">
                                    <a href="#" data-toggle="modal" data-target="#Deuda_@item.idReferido"><b>Ingresar Deuda</b></a>
                                    <div class="dropdown-divider"></div>
                                    <a href="#" data-toggle="modal" data-target="#Efectivo_@item.idReferido"><b>Ingresar Pago</b></a>
                                    <div class="dropdown-divider"></div>
                                </div>



                                @*ALERT INGRESAR DEUDA*@

                                @*<form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/Deuda")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Deuda_@item.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>¿Desea agregar una cantidad de DEUDA a @item.Nombre?</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@item.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Ingreso Pago:</label>
                                                        <b>@Convert.ToDateTime(fechaFinal).ToString("dd-MMMM-yyyy")</b><br />
                                                        <label for="recipient-name" class="col-form-label">Precio EPIs:</label>
                                                        <b>@item.PrecioNormal</b><br />
                                                        <label for="recipient-name" class="col-form-label"> Numero de Pagos del Gestor:</label>
                                                        <b>@Convert.ToInt32(pago)</b><br />
                                                        <label for="recipient-name" class="col-form-label">Cantidad:</label>
                                                        <input type="tel" class="form-control" name="deuda" />
                                                        <input type="hidden" value="@item.idReferido" class="form-control" name="id" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>*@




                                @*ALERT INGRESAR EFECTIVO*@

                                <form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/EditarEfectivo")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Efectivo_@item.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>¿Desea ingresar PAGO a @item.Nombre?</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@item.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />

                                                        <label for="recipient-name" class="col-form-label">Precio de EPIs:</label>
                                                        <b>$@item.PrecioNormal</b><br />
                                                        <label for="recipient-name" class="col-form-label"> Pagos del Gestor:</label>
                                                        <b>$@pago</b><br />
                                                        <label for="recipient-name" class="col-form-label">Cantidad:</label>
                                                        <input type="tel" class="form-control" name="efectivo" />
                                                        <input type="hidden" value="@item.idReferido" class="form-control" name="id" />
                                                        <input type="hidden" value="@fechaInicio" class="form-control" name="fecha1" />
                                                        <input type="hidden" value="@FECHAFS" class="form-control" name="fecha2" />
                                                        <input type="hidden" value="@FechaAhora" class="form-control" name="fechaAhora" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>


                        </td>
                    </tr>

                }

            }
        }

    </table>
</div>







@*TABLE INVISIBLE PARA DESCARGA DE EXCEL*@

<div class="tablaScroll" style="min-height: 300px; max-height: 450px; display: none">
    <table id="Excel" class="table  table-hover tablas table-bordered" style="color: #2F2D6B">
        <thead style="color:white">
            <tr>
                <th>Gestor/Canal</th>
                <th>EPIs Totales</th>
                <th>Importe</th>
                <th>Pago</th>
                <th>Saldo</th>
                <th>Estatus</th>
            </tr>
        </thead>

        @*AQUI EMPIEZA LA TABLA DE EPIS ALTERNATIVOS*@
        @{
            foreach (var itemd in db.Referido.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullosAlt = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                if (gestoresNoNullosAlt != 0)
                {

                    <tr>
                        <td>
                            <b>@itemd.Nombre</b><span style="font-size:xx-small"> @itemd.Tipo</span>
                        </td>

                        @{
                            //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestor = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorAereo = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorTotal = deudaGestor + deudaGestorAereo;


                            //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestor1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" select i).Count();

                            //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorAereo1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorTotal1 = deudaGestor1 + deudaGestorAereo1;


                            //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                            deuda = itemd.PrecioNormalconIVA == null || itemd.PrecioNormalconIVA == "0" ? deudaGestor * Convert.ToInt32(itemd.PrecioNormal) : deudaGestor * Convert.ToInt32(itemd.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA

                            if (itemd.PrecioAereo == null || itemd.PrecioAereo == "0")
                            {
                                deudaAereos = deudaGestorAereo * 3480;
                            }

                            else
                            {
                                deudaAereos = deudaGestorAereo * Convert.ToInt32(itemd.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            deudaTotal = deuda + deudaAereos;


                            //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            deuda1 = itemd.PrecioNormalconIVA == null || itemd.PrecioNormalconIVA == "0" ? deudaGestor1 * Convert.ToInt32(itemd.PrecioNormal) : deudaGestor1 * Convert.ToInt32(itemd.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA

                            if (itemd.PrecioAereo != null || itemd.PrecioAereo != "0")
                            {
                                deudaAereos1 = deudaGestorAereo1 * 3480;
                            }

                            else
                            {
                                deudaAereos1 = deudaGestorAereo1 * Convert.ToInt32(itemd.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            deudaTotal1 = deuda1 + deudaAereos1;

                            if (deudaGestorAereo != 0)
                            {
                                deudaTotal = deuda + deudaAereos;
                                deudaTotal1 = deuda1 + deudaAereos1;
                                <td>
                                    <span class="field-tip">
                                        <b>@deudaGestorTotal</b>
                                        <span class="tip-content">
                                            <span><b>Divididos en </b></span><br />
                                            @{

                                                if (deudaGestor != 0)
                                                {
                                                    if (itemd.PrecioNormalconIVA != "0" && itemd.PrecioNormalconIVA != null)
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi con IVA: $@itemd.PrecioNormalconIVA</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi sin IVA: $@itemd.PrecioNormal</span><br />
                                                    }

                                                }

                                            }
                                            @{
                                                if (deudaGestorAereo != 0)
                                                {

                                                    if (itemd.PrecioAereo == null || itemd.PrecioAereo == "0")
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $3480</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $@itemd.PrecioAereo</span><br />
                                                    }

                                                }

                                            }
                                        </span>
                                    </span>
                                </td>
                                <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                            }

                            else
                            {

                                <td>
                                    <span class="field-tip">
                                        <b>@deudaGestorTotal</b>
                                        <span class="tip-content">
                                            <span><b>Divididos en </b></span><br />
                                            @{
                                                if (itemd.PrecioNormalconIVA != "0" && itemd.PrecioNormalconIVA != null)
                                                {
                                                    <span><b>No. Epis: @deudaGestor</b></span><br />
                                                    <span>Precio de epi con IVA: $@itemd.PrecioNormalconIVA</span><br />
                                                }

                                                else
                                                {
                                                    <span><b>No. Epis: @deudaGestor</b></span><br />
                                                    <span>Precio de epi sin IVA: $@itemd.PrecioNormal</span><br />
                                                }
                                            }
                                            @{
                                                if (deudaGestorAereo != 0)
                                                {

                                                    if (itemd.PrecioAereo == null || itemd.PrecioAereo == "0")
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $3480</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $@itemd.PrecioAereo</span><br />
                                                    }

                                                }

                                            }
                                        </span>
                                    </span>
                                </td>
                                <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                            }

                        }

                        <td>

                            @{

                                //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestor = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorAereo = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorTotal = pagoGestor + pagoGestorAereo;


                                //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestor1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia != "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") select i).Count();

                                //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorrAereo1 = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.TipoLicencia == "AEREO" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorTotal1 = pagoGestor1 + pagoGestorrAereo1;


                                //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                pago = itemd.PrecioNormalconIVA == null ? pagoGestor * Convert.ToInt32(itemd.PrecioNormal) : pagoGestor * Convert.ToInt32(itemd.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                pagoAereos = pagoGestorAereo * Convert.ToInt32(itemd.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                pagoTotal = pago + pagoAereos;


                                //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                pago1 = itemd.PrecioNormalconIVA == null ? pagoGestor1 * Convert.ToInt32(itemd.PrecioNormal) : pagoGestor1 * Convert.ToInt32(itemd.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                pagoAereos1 = pagoGestorrAereo1 * Convert.ToInt32(itemd.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                pagoTotal1 = pago1 + pagoGestorrAereo1;


                                if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                                {

                                    pago = deudaTotal;
                                    <span>$@pago.ToString("###,###,###,###")</span>

                                }

                                else
                                {

                                    if (pagoGestorTotal != 0)
                                    {

                                        <span>$@pagoTotal.ToString("###,###,###,###")</span>
                                    }

                                    else
                                    {
                                        <span>$</span>
                                        <span>-----</span>
                                    }

                                }

                            }
                        </td>
                        <td>

                            @{
                                saldo = pagoTotal - deudaTotal;

                                if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                                {

                                    saldo = 0;

                                    <span>$@saldo.ToString("###,###,###,###")</span>

                                }

                                else
                                {
                                    if (saldo < 0)
                                    {
                                        saldo = saldo * (-1);

                                        <span>($@saldo.ToString("###,###,###,###"))</span>
                                    }

                                    else
                                    {
                                        <span>$@saldo.ToString("###,###,###,###")</span>

                                    }

                                }
                            }

                        </td>
                        <td>

                            @{
                                var estatus = from i in db.PacienteESP where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                                string texto = "";

                                foreach (var i in estatus)
                                {
                                    if (i.FechaCita < DateTime.Today.AddDays(-30))
                                    {
                                        texto = "text-danger";
                                        break;
                                    }
                                    else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                    {
                                        texto = "text-warning";
                                        break;
                                    }
                                    else
                                    {
                                        texto = "text-success";
                                        break;
                                    }
                                }

                                <div style="width:2px;"></div>
                                <span class="@texto">•</span>

                            }

                        </td>

                    </tr>
                }

            }
        }


        @*AQUI EMPIEZA LA PARTE DE LA TABLA DE LOS EPIS NORMALES*@
        @{

            foreach (var item in db.Referido.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullos = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                if (gestoresNoNullos != 0)
                {
                    <tr>
                        <td>
                            <b>@item.Nombre</b><span style="font-size:xx-small"> @item.Tipo</span>
                        </td>
                        @{
                            //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestor = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorAereo = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            int deudaGestorTotal = deudaGestor + deudaGestorAereo;


                            //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestor1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" select i).Count();

                            //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorAereo1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" select i).Count();

                            //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            int deudaGestorTotal1 = deudaGestor1 + deudaGestorAereo1;


                            //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                            deuda = item.PrecioNormalconIVA == null || item.PrecioNormalconIVA == "0" ? deudaGestor * Convert.ToInt32(item.PrecioNormal) : deudaGestor * Convert.ToInt32(item.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA

                            if (item.PrecioAereo == null || item.PrecioAereo == "0")
                            {
                                deudaAereos = deudaGestorAereo * 3480;
                            }

                            else
                            {
                                deudaAereos = deudaGestorAereo * Convert.ToInt32(item.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                            deudaTotal = deuda + deudaAereos;


                            //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                            deuda1 = item.PrecioNormalconIVA == null || item.PrecioNormalconIVA == "0" ? deudaGestor1 * Convert.ToInt32(item.PrecioNormal) : deudaGestor1 * Convert.ToInt32(item.PrecioNormalconIVA);

                            //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA

                            if (item.PrecioAereo != null || item.PrecioAereo != "0")
                            {
                                deudaAereos1 = deudaGestorAereo1 * 3480;
                            }

                            else
                            {
                                deudaAereos1 = deudaGestorAereo1 * Convert.ToInt32(item.PrecioAereo);
                            }

                            //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                            deudaTotal1 = deuda1 + deudaAereos1;

                            if (deudaGestorAereo != 0)
                            {
                                deudaTotal = deuda + deudaAereos;
                                deudaTotal1 = deuda1 + deudaAereos1;
                                <td>
                                    <span class="field-tip">
                                        <b>@deudaGestorTotal</b>
                                        <span class="tip-content">
                                            <span><b>Divididos en </b></span><br />
                                            @{

                                                if (deudaGestor != 0)
                                                {
                                                    if (item.PrecioNormalconIVA != "0" && item.PrecioNormalconIVA != null)
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi con IVA: $@item.PrecioNormalconIVA</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis: @deudaGestor</b></span><br />
                                                        <span>Precio de epi sin IVA: $@item.PrecioNormal</span><br />
                                                    }

                                                }

                                            }
                                            @{
                                                if (deudaGestorAereo != 0)
                                                {

                                                    if (item.PrecioAereo == null || item.PrecioAereo == "0")
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $3480</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $@item.PrecioAereo</span><br />
                                                    }

                                                }

                                            }
                                        </span>
                                    </span>
                                </td>
                                <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                            }

                            else
                            {

                                <td>
                                    <span class="field-tip">
                                        <b>@deudaGestorTotal</b>
                                        <span class="tip-content">
                                            <span><b>Divididos en </b></span><br />
                                            @{
                                                if (item.PrecioNormalconIVA != "0" && item.PrecioNormalconIVA != null)
                                                {

                                                    <span><b>No. Epis: @deudaGestor</b></span><br />
                                                    <span>Precio de epi con IVA: $@item.PrecioNormalconIVA</span><br />
                                                }

                                                else
                                                {

                                                    <span><b>No. Epis: @deudaGestor</b></span><br />
                                                    <span>Precio de epi sin IVA: $@item.PrecioNormal</span><br />
                                                }
                                            }
                                            @{
                                                if (deudaGestorAereo != 0)
                                                {

                                                    if (item.PrecioAereo == null || item.PrecioAereo == "0")
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $3480</span><br />
                                                    }

                                                    else
                                                    {
                                                        <span><b>No. Epis AEREOS: @deudaGestorAereo</b></span><br />
                                                        <span>Precio de epi: $@item.PrecioAereo</span><br />
                                                    }

                                                }

                                            }
                                        </span>
                                    </span>
                                </td>
                                <td><span> $@deudaTotal.ToString("###,###,###,###")</span></td>

                            }

                        }

                        <td>

                            @{

                                //NUMERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestor = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorAereo = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                int pagoGestorTotal = pagoGestor + pagoGestorAereo;


                                //NUMERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestor1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia != "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") select i).Count();

                                //NUMERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorrAereo1 = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.TipoLicencia == "AEREO" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") select i).Count();

                                //NUMERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                int pagoGestorTotal1 = pagoGestor1 + pagoGestorrAereo1;


                                //DINERO DE EPIS NO AEREOS DENTRO DEL RANGO DE FECHA
                                pago = item.PrecioNormalconIVA == null ? pagoGestor * Convert.ToInt32(item.PrecioNormal) : pagoGestor * Convert.ToInt32(item.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS DENTRO DEL RANGO DE FECHA
                                pagoAereos = pagoGestorAereo * Convert.ToInt32(item.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS DENTRO DEL RANGO DE FECHA
                                pagoTotal = pago + pagoAereos;


                                //DINERO DE EPIS NO AEREOS FUERA DEL RANGO DE FECHA
                                pago1 = item.PrecioNormalconIVA == null ? pagoGestor1 * Convert.ToInt32(item.PrecioNormal) : pagoGestor1 * Convert.ToInt32(item.PrecioNormalconIVA);

                                //DINERO DE EPIS AEREOS FUERA DEL RANGO DE FECHA
                                pagoAereos1 = pagoGestorrAereo1 * Convert.ToInt32(item.PrecioAereo);

                                //DINERO DE EPIS TOTALES, AEREOS Y NO AEREOS FUERA DEL RANGO DE FECHA
                                pagoTotal1 = pago1 + pagoGestorrAereo1;


                                if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                                {

                                    pago = deudaTotal;
                                    <span>$@pago.ToString("###,###,###,###")</span>

                                }

                                else
                                {

                                    if (pagoGestorTotal != 0)
                                    {

                                        <span>$@pagoTotal.ToString("###,###,###,###")</span>
                                    }

                                    else
                                    {
                                        <span>$</span>
                                        <span>-----</span>
                                    }

                                }

                            }

                        </td>
                        <td>

                            @{
                                saldo = pagoTotal - deudaTotal;

                                if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                                {

                                    saldo = 0;

                                    <span>$@saldo.ToString("###,###,###,###")</span>

                                }

                                else
                                {
                                    if (saldo < 0)
                                    {
                                        saldo = saldo * (-1);

                                        <span>($@saldo.ToString("###,###,###,###"))</span>
                                    }

                                    else
                                    {
                                        <span>$@saldo.ToString("###,###,###,###")</span>

                                    }

                                }


                            }

                        </td>
                        <td>

                            @{
                                var estatus = from i in db.Cita where i.CanalTipo == item.Tipo && i.ReferidoPor == item.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                                string texto = "";

                                foreach (var i in estatus)
                                {
                                    if (i.FechaCita < DateTime.Today.AddDays(-30))
                                    {
                                        texto = "text-danger";
                                        break;
                                    }
                                    else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                    {
                                        texto = "text-warning";
                                        break;
                                    }
                                    else
                                    {
                                        texto = "text-success";
                                        break;
                                    }
                                }

                                <div style="width:2px;"></div>
                                <span class="@texto">•</span>

                            }

                        </td>
                    </tr>

                }

            }
        }

    </table>

</div>